[General]
ned-path = .;../inet/examples;../inet/src/inet;../inet/bin;../inet/doc;../inet/etc;../inet/images;../inet/misc;../inet/out;../inet/showcases;../inet/templates;../inet/tutorials
network = Drones

# scene visualization

*.visualizer.osgVisualizer.typename = "IntegratedOsgVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.clearColor = "skyblue"
*.visualizer.osgVisualizer.sceneVisualizer.sceneImage = "showcases/desert"
*.visualizer.osgVisualizer.sceneVisualizer.sceneImageSize = 5000m
*.visualizer.osgVisualizer.sceneVisualizer.axisLength = 1000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinX = -2000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinY = -2000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinZ = 0m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxX = 3000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxY = 3000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxZ = 1000m

# network node visualization: disable labels
*.visualizer.osgVisualizer.networkNodeVisualizer.displayModuleName = false



# mobility visualization
*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true
*.visualizer.*.mobilityVisualizer.animationSpeed = 1

*.visualizer.canvasVisualizer.mediumVisualizer.displaySignals = true


# mobility constraint area
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 200m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 1000m
**.constraintAreaMaxZ = 400m

#*.numHosts = 6
*.host[*].osgModel = "3d/drone.ive.100.scale.0,0,90.rot"
*.clone.osgModel = "3d/drone.ive.100.scale.0,0,90.rot"

*.host[*].mobility.typename = "MassMobility"
*.host[*].mobility.changeInterval = 1s
*.host[*].mobility.initialMovementHeading = uniform(0deg, 360deg)
*.host[*].mobility.initialMovementElevation = uniform(-90deg, 90deg)
*.host[*].mobility.angleDelta = uniform(-10deg,10deg)
*.host[*].mobility.rotationAxisAngle = uniform(-10deg,10deg)
*.host[*].mobility.speed = uniform(10mps,20mps)
*.host[*].mobility.faceForward = false

*.clone.mobility.typename = "MassMobility"
*.clone.mobility.changeInterval = 1s
*.clone.mobility.initialMovementHeading = uniform(0deg, 360deg)
*.clone.mobility.initialMovementElevation = uniform(-90deg, 90deg)
*.clone.mobility.angleDelta = uniform(-10deg,10deg)
*.clone.mobility.rotationAxisAngle = uniform(-10deg,10deg)
*.clone.mobility.speed = uniform(10mps,20mps)
*.clone.mobility.faceForward = false

#*.host*.ipv4.arp.typename = "GlobalArp"
#*.clone.ipv4.arp.typename = "GlobalArp"
*.clone.ac_wlan.interfaces = "wlan0"
*.host[*].ac_wlan.interfaces = "wlan0"
*.host[*].numApps = 1
*.host[*].app[0].typename = "mtlsdApp"
*.host[*].app[0].destPort = 5000
*.host[*].app[0].sendInterval = exponential(12ms)

*.clone.numApps = 1
*.clone.app[0].typename = "mtlsdApp"
*.clone.app[0].destPort = 5000
*.clone.app[0].sendInterval = exponential(12ms)

# channel physical parameters
**.wlan[*].typename = "AckingWirelessInterface"
**.wlan[*].bitrate = 2Mbps
**.wlan[*].mac.headerLength = 20B
**.wlan[*].radio.typename = "UnitDiskRadio"
**.wlan[*].radio.transmitter.headerLength = 96b
**.wlan[*].radio.transmitter.communicationRange = 250m
**.wlan[*].radio.transmitter.interferenceRange = 0m
**.wlan[*].radio.transmitter.detectionRange = 0m
**.wlan[*].radio.receiver.ignoreInterference = true

*.host[*].wlan[0].radio.displayCommunicationRange = true
*.clone.wlan[0].radio.displayCommunicationRange = true


